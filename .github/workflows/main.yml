name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Cache NPM dependencies
    - name: Cache NPM dependencies
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-yarn-cache-

    # yarn install
    - name: Install
      run: yarn install

    # build typescript
    - name: Build
      run: yarn build

  lint:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Cache NPM dependencies
    - name: Cache NPM dependencies
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-yarn-cache-

    # yarn install
    - name: Install
      run: yarn install

    # run eslint
    - name: Lint
      uses: tinovyatkin/action-eslint@master
      with:
        repo-token: ${{secrets.GITHUB_TOKEN}}
        check-name: eslint

  test:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Cache NPM dependencies
    - name: Cache NPM dependencies
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-yarn-cache-

    # yarn install
    - name: Install
      run: yarn install

    - uses: artiomtr/jest-coverage-report-action@v1.2
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
